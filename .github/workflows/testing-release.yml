name: Testing Release Build

on:
  push:
    #    branches: [ testing ]
    tags: [ 'testing-*' ]
    #  pull_request:
    #    branches: [ testing ]

jobs:
  build:
    strategy:
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    # Add permissions block here for the job
    permissions:
      contents: write
      packages: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: testing
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Updated to Python 3.12

    - name: Create virtual environment
      shell: bash
      run: |
        python -m venv venv
        if [ "${{ runner.os }}" == "Windows" ]; then
          source venv/Scripts/activate
        else
          source venv/bin/activate
        fi
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

    - name: Verify Python version
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          source venv/Scripts/activate
          venv/Scripts/python.exe --version
        else
          source venv/bin/activate
          python --version  # Verify correct Python version
        fi

    - name: Install dependencies
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          source venv/scripts/activate
          venv/Scripts/python.exe -m pip install --upgrade pip
          venv/Scripts/python.exe -m pip install -r requirements.txt
        else
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
        fi

    - name: Show location and files
      shell: bash
      run: |
        pwd
        ls

    - name: Run build script
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          source venv/scripts/activate
        else
          source venv/bin/activate
        fi
        chmod +x bin/build
        bin/build --skip-npm-build --skip-git-tag

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Matches Electron and other dependencies version requirements

    - name: Install npm dependencies
      shell: bash
      run: |
        npm install

    - name: Build frontend for ${{ matrix.os }}
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          npm run build:linux
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          npm run build:mac
        else
          npm run build:win
        fi

    - name: Package testing artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-testing-servers
        path: |
          dist/**
          !dist/servers
        if-no-files-found: error

    - name: Create testing release
      if: github.ref == 'refs/heads/testing'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: testing-${{ github.sha }}
        name: Testing Release
        body: |
          Automated testing release from testing branch
          OS: ${{ matrix.os }}
          Python: 3.12
          SHA: ${{ github.sha }}
        draft: false
        prerelease: true
        files: |
          dist/**
          !dist/servers
